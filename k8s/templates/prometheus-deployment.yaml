---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-prometheus
  namespace: aiml-engineering
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}-prometheus
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-prometheus
    spec:
      nodeSelector:
          #kubernetes.io/hostname: {{ .Values.ollama.nodeName }}
          nvidia.com/gpu.product: {{ .Values.prometheus.gpuProduct }}
      containers:
        - name: prometheus
          image: "{{ .Values.prometheus.image.repository }}:{{ .Values.prometheus.image.tag }}"
          imagePullPolicy: {{ .Values.prometheus.image.pullPolicy }}
          args:
            - "--config.file=/etc/prometheus/prometheus.yml"
            - "--storage.tsdb.path=/data/prometheus/"
            - "--storage.tsdb.retention.time=7d"
          ports:
            - containerPort: {{ .Values.prometheus.service.port }}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/prometheus
            - name: prometheus-storage
              mountPath: /data
          resources:
            requests:
              memory: {{ .Values.prometheus.resources.requests.memory }}
              cpu: {{ .Values.prometheus.resources.requests.cpu }}
            limits:
              memory: {{ .Values.prometheus.resources.limits.memory }}
              cpu: {{ .Values.prometheus.resources.limits.cpu }}
      volumes:
        - name: config-volume
          configMap:
            name: prometheus-config
        - name: prometheus-storage
          persistentVolumeClaim:
            claimName: {{ .Values.prometheus.volumes.data.pvcName }}
